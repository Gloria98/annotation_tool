#!/bin/bash
# anno_tool_db

# Stop on errors
set -e

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
  if [ -e var/anno_tool.sqlite3 ]
  then
    echo "Error: database already exists"
  else
    echo "+ sqlite3 var/anno_tool.sqlite3 < sql/schema.sql"
    sqlite3 var/anno_tool.sqlite3 < sql/schema.sql
    # sqlite3 var/anno_tool.sqlite3 < sql/data.sql
  fi
    ;;

  "destroy")
    echo "+ rm -rf var/anno_tool.sqlite3"
    rm -rf var/anno_tool.sqlite3 
    ;;

  "reset")
    echo "+ rm -rf var/anno_tool.sqlite3
+ sqlite3 var/anno_tool.sqlite3 < sql/schema.sql"
    rm -rf var/anno_tool.sqlite3
    sqlite3 var/anno_tool.sqlite3 < sql/schema.sql
    ;;

  "dump")
    sqlite3 -batch -line var/anno_tool.sqlite3 'SELECT * FROM entities'
    sqlite3 -batch -line var/anno_tool.sqlite3 'SELECT * FROM allOC'
    sqlite3 -batch -line var/anno_tool.sqlite3 'SELECT * FROM disambiguationOC'
    sqlite3 -batch -line var/anno_tool.sqlite3 'SELECT * FROM speculationOC'
    sqlite3 -batch -line var/anno_tool.sqlite3 'SELECT * FROM entityRelation'
    sqlite3 -batch -line var/anno_tool.sqlite3 'SELECT * FROM entityOCRelation'
    sqlite3 -batch -line var/anno_tool.sqlite3 'SELECT * FROM OCRelation'
    ;;
 *)
    usage
    exit 1
    ;;
  esac
